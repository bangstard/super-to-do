/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/build.gradle:12: Warning: A newer version of com.android.tools.build:gradle than 4.1.0 is available: 7.3.1. (There is also a newer version of 4.1.ùë• available, if upgrading to 7.3.1 is difficult: 4.1.3) [AndroidGradlePluginVersion]
        classpath 'com.android.tools.build:gradle:4.1.0'
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/build.gradle:44: Warning: A newer version of androidx.annotation:annotation than 1.0.0 is available: 1.5.0 [GradleDependency]
    compileOnly 'androidx.annotation:annotation:1.0.0'
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/build.gradle:45: Warning: A newer version of junit:junit than 4.12 is available: 4.13.2 [GradleDependency]
    testImplementation 'junit:junit:4.12'
                       ~~~~~~~~~~~~~~~~~~
/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/build.gradle:47: Warning: A newer version of androidx.test:core than 1.0.0 is available: 1.5.0 [GradleDependency]
    testImplementation 'androidx.test:core:1.0.0'
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/build.gradle:51: Warning: A newer version of androidx.core:core-ktx than 1.3.2 is available: 1.9.0 [GradleDependency]
    implementation "androidx.core:core-ktx:1.3.2"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/build.gradle:52: Warning: A newer version of org.jetbrains.kotlin:kotlin-stdlib-jdk7 than 1.5.30 is available: 1.6.10 [GradleDependency]
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/build.gradle:50: Warning: Avoid using + in version numbers; can lead to unpredictable and unrepeatable builds (com.google.android.gms:play-services-location:16.+) [GradleDynamicVersion]
    api 'com.google.android.gms:play-services-location:16.+'
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDynamicVersion":
   Using + in dependencies lets you automatically pick up the latest available
   version rather than a specific, named version. However, this is not
   recommended; your builds are not repeatable; you may have tested with a
   slightly different version than what the build server used. (Using a
   dynamic version as the major version number is more problematic than using
   it in the minor version position.)

/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/src/main/java/com/lyokone/location/FlutterLocationService.kt:57: Warning: Missing PendingIntent mutability flag [UnspecifiedImmutableFlag]
            PendingIntent.getActivity(context, 0, intent, 0)
                                                          ~

   Explanation for issues of type "UnspecifiedImmutableFlag":
   Apps targeting Android 12 and higher must specify either FLAG_IMMUTABLE or
   FLAG_MUTABLE when constructing a PendingIntent.

   https://developer.android.com/about/versions/12/behavior-changes-12#pending-intent-mutability

/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/src/main/java/com/lyokone/location/MethodCallHandlerImpl.java:102: Warning: Use Long.valueOf((int) call.argument("interval")) instead [UseValueOf]
            final Long updateIntervalMilliseconds = new Long((int) call.argument("interval"));
                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/src/main/java/com/lyokone/location/MethodCallHandlerImpl.java:104: Warning: Use Float.valueOf((double) call.argument("distanceFilter")) instead [UseValueOf]
            final Float distanceFilter = new Float((double) call.argument("distanceFilter"));
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseValueOf":
   You should not call the constructor for wrapper classes directly, such
   as`new Integer(42)`. Instead, call the valueOf factory method, such as
   Integer.valueOf(42). This will typically use less memory because common
   integers such as 0 and 1 will share a single instance.

/Users/qayyumcheri/Dev/flutter/.pub-cache/hosted/pub.dartlang.org/location-4.4.0/android/src/main/res/drawable/navigation_empty_icon.xml:2: Warning: The resource R.drawable.navigation_empty_icon appears to be unused [UnusedResources]
<shape
^

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.

   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests=true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests=true.

0 errors, 11 warnings
